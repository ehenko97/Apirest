syntax = "proto3";

package users;

option go_package = "Projectapirest/internal/proto;users";  // Укажите пакет

import "google/protobuf/empty.proto";

// Определение сущности User
message User {
  int64 id = 1;                  // Идентификатор пользователя
  string name = 2;               // Имя пользователя
  string email = 3;              // Email пользователя
  string created_at = 4;         // Дата и время создания
  string updated_at = 5;         // Дата и время обновления
}

// Определение сущности Product
message Product {
  int64 id = 1;                  // Идентификатор продукта
  string name = 2;               // Название продукта
  string description = 3;        // Описание продукта
  float price = 4;               // Цена продукта
  int64 user_id = 5;             // ID владельца (Foreign Key)
  string created_at = 6;         // Дата и время создания
  string updated_at = 7;         // Дата и время обновления
}

// Запросы и ответы для операций над User
message CreateUserRequest {
  string name = 1;
  string email = 2;
}

message UserResponse {
  User user = 1;
}

message GetUserRequest {
  int64 id = 1;
}

message UpdateUserRequest {
  int64 id = 1;
  string name = 2;
  string email = 3;
}

message DeleteUserRequest {
  int64 id = 1;
}

message ListUsersRequest {}

message ListUsersResponse {
  repeated User users = 1;
}

// Запросы и ответы для операций над Product
message CreateProductRequest {
  string name = 1;
  string description = 2;
  float price = 3;
  int64 user_id = 4;
}

message ProductResponse {
  Product product = 1;
}

message GetProductRequest {
  int64 id = 1;
}

message UpdateProductRequest {
  int64 id = 1;
  string name = 2;
  string description = 3;
  float price = 4;
  int64 user_id = 5;
}

message DeleteProductRequest {
  int64 id = 1;
}

message ListProductsRequest {}

message ListProductsResponse {
  repeated Product products = 1;
}

message ListUserProductsRequest {
  int64 user_id = 1;
}

message ListUserProductsResponse {
  repeated Product products = 1;
}

// Пустые сообщения для ответа на операции удаления
message DeleteUserResponse {}

message DeleteProductResponse {}

// Определение gRPC-сервиса для управления User
service UserService {
  rpc CreateUser (CreateUserRequest) returns (UserResponse); // Создание нового пользователя.
  rpc GetUser (GetUserRequest) returns (UserResponse); // Получение информации о пользователе по его уникальному идентификатору (ID).
  rpc UpdateUser (UpdateUserRequest) returns (UserResponse); // Обновление информации о существующем пользователе.
  rpc DeleteUser (DeleteUserRequest) returns (DeleteUserResponse); // Удаление пользователя по его уникальному идентификатору (ID).
  rpc ListUsers (ListUsersRequest) returns (ListUsersResponse); // Получение списка всех пользователей в системе.
}

// Определение gRPC-сервиса для управления Product
service ProductService {
  rpc CreateProduct (CreateProductRequest) returns (ProductResponse); // Создание нового продукта.
  rpc GetProduct (GetProductRequest) returns (ProductResponse);       // Получение информации о продукте по его уникальному идентификатору (ID).
  rpc UpdateProduct (UpdateProductRequest) returns (ProductResponse); // Обновление информации о существующем продукте.
  rpc DeleteProduct (DeleteProductRequest) returns (DeleteProductResponse); // Удаление продукта по его уникальному идентификатору (ID).
  rpc ListProducts (ListProductsRequest) returns (ListProductsResponse); // Получение списка всех продуктов в системе.
  rpc ListUserProducts (ListUserProductsRequest) returns (ListUserProductsResponse); // Получение списка всех продуктов, принадлежащих определённому пользователю.
}
